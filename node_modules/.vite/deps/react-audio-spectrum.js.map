{
  "version": 3,
  "sources": ["../../react-audio-spectrum/es/index.js", "../../react-audio-spectrum/es/utils.js"],
  "sourcesContent": ["import * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport { getRandomId } from './utils';\nvar PLAY_STATUS = /*#__PURE__*/function (PLAY_STATUS) {\n  PLAY_STATUS[\"PAUSED\"] = \"PAUSED\";\n  PLAY_STATUS[\"PLAYING\"] = \"PLAYING\";\n  return PLAY_STATUS;\n}(PLAY_STATUS || {});\nexport default function ReactAudioSpectrum(props) {\n  var _props$id = props.id,\n    id = _props$id === void 0 ? getRandomId(50) : _props$id,\n    audioId = props.audioId,\n    audioEle = props.audioEle,\n    _props$width = props.width,\n    width = _props$width === void 0 ? 300 : _props$width,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 200 : _props$height,\n    _props$capColor = props.capColor,\n    capColor = _props$capColor === void 0 ? '#FFF' : _props$capColor,\n    _props$capHeight = props.capHeight,\n    capHeight = _props$capHeight === void 0 ? 2 : _props$capHeight,\n    _props$meterColor = props.meterColor,\n    meterColor = _props$meterColor === void 0 ? [{\n      stop: 0,\n      color: '#f00'\n    }, {\n      stop: 0.5,\n      color: '#0CD7FD'\n    }, {\n      stop: 1,\n      color: 'red'\n    }] : _props$meterColor,\n    _props$gap = props.gap,\n    gap = _props$gap === void 0 ? 10 : _props$gap,\n    _props$meterCount = props.meterCount,\n    meterCount = _props$meterCount === void 0 ? 160 : _props$meterCount,\n    _props$meterWidth = props.meterWidth,\n    meterWidth = _props$meterWidth === void 0 ? 2 : _props$meterWidth,\n    _props$silent = props.silent,\n    silent = _props$silent === void 0 ? false : _props$silent;\n  var _audioEleRef = useRef();\n  var _audioCanvasRef = useRef();\n  var _playStatusRef = useRef();\n  var _audioContextRef = useRef();\n  var _audioAnalyserRef = useRef();\n  var _mediaEleSourceRef = useRef();\n  var _animationIdRef = useRef();\n  var prepareElements = function prepareElements() {\n    if (!audioId && !audioEle) {\n      console.error('target audio not found!');\n      return;\n    } else if (audioId) {\n      _audioEleRef.current = document.getElementById(audioId);\n    } else {\n      _audioEleRef.current = audioEle;\n    }\n    _audioCanvasRef.current = document.getElementById(id);\n  };\n  var handleBrowserVendors = function handleBrowserVendors() {\n    // fix browser vender for AudioContext and requestAnimationFrame\n    window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\n    window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n    window.cancelAnimationFrame = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.msCancelAnimationFrame;\n  };\n  var createAndConnect = function createAndConnect(audioEle) {\n    // set audioContext\n    try {\n      _audioContextRef.current = new window.AudioContext();\n    } catch (e) {\n      console.error('Your browser does not support AudioContext', e);\n    }\n    // create and config Analyser\n    if (!_audioAnalyserRef.current) {\n      _audioAnalyserRef.current = _audioContextRef.current.createAnalyser();\n      _audioAnalyserRef.current.smoothingTimeConstant = 0.8;\n      _audioAnalyserRef.current.fftSize = 2048;\n    }\n    // create MediaElementSource and connect with both analyser and audioContext\n    if (!_mediaEleSourceRef.current) {\n      // @ts-ignore\n      _mediaEleSourceRef.current = _audioContextRef.current.createMediaElementSource(audioEle);\n      _mediaEleSourceRef.current.connect(_audioAnalyserRef.current);\n      if (!silent) {\n        _mediaEleSourceRef.current.connect(_audioContextRef.current.destination);\n      }\n    }\n  };\n  var drawSpectrum = function drawSpectrum() {\n    var cwidth = width;\n    var cheight = height - capHeight;\n    var capYPositionArray = []; // store the vertical position of hte caps for the preivous frame\n    var ctx = _audioCanvasRef.current.getContext('2d');\n    var gradient = null;\n    gradient = ctx.createLinearGradient(0, 0, 0, cheight);\n    if (meterColor.constructor === Array) {\n      var stops = meterColor;\n      var len = stops.length;\n      for (var i = 0; i < len; i++) {\n        gradient.addColorStop(stops[i]['stop'], stops[i]['color']);\n      }\n    } else if (typeof meterColor === 'string') {\n      gradient = meterColor;\n    }\n    var drawMeter = function drawMeter() {\n      var array = new Uint8Array(_audioAnalyserRef.current.frequencyBinCount); // item value of array: 0 - 255\n      _audioAnalyserRef.current.getByteFrequencyData(array);\n      if (_playStatusRef.current === PLAY_STATUS.PAUSED) {\n        for (var _i = array.length - 1; _i >= 0; _i--) {\n          array[_i] = 0;\n        }\n        var allCapsReachBottom = !capYPositionArray.some(function (cap) {\n          return cap > 0;\n        });\n        if (allCapsReachBottom) {\n          ctx.clearRect(0, 0, cwidth, cheight + capHeight);\n          cancelAnimationFrame(_animationIdRef.current); // since the sound is top and animation finished, stop the requestAnimation to prevent potential memory leak,THIS IS VERY IMPORTANT!\n          return;\n        }\n      }\n      var step = Math.round(array.length / meterCount); // sample limited data from the total array\n      ctx.clearRect(0, 0, cwidth, cheight + capHeight);\n      for (var _i2 = 0; _i2 < meterCount; _i2++) {\n        var value = array[_i2 * step]; // pick one value out of every 2(step)\n        if (capYPositionArray.length < Math.round(meterCount)) {\n          capYPositionArray.push(value);\n        }\n        ;\n        ctx.fillStyle = capColor;\n        // draw the cap, with transition effect\n        if (value < capYPositionArray[_i2]) {\n          // let y = cheight - (--capYPositionArray[i])\n          var preValue = --capYPositionArray[_i2];\n          var _y = (256 - preValue) * cheight / 256;\n          ctx.fillRect(_i2 * (meterWidth + gap), _y, meterWidth, capHeight);\n        } else {\n          // let y = cheight - value\n          var _y2 = (256 - value) * cheight / 256;\n          ctx.fillRect(_i2 * (meterWidth + gap), _y2, meterWidth, capHeight);\n          capYPositionArray[_i2] = value;\n        }\n        ;\n        ctx.fillStyle = gradient; // set the filllStyle to gradient for a better look\n\n        // let y = cheight - value + capHeight\n        var y = (256 - value) * cheight / 256 + capHeight;\n        ctx.fillRect(_i2 * (meterWidth + gap), y, meterWidth, cheight); // the meter\n      }\n      _animationIdRef.current = requestAnimationFrame(drawMeter);\n    };\n    _animationIdRef.current = requestAnimationFrame(drawMeter);\n  };\n  var initAudioEvents = function initAudioEvents() {\n    if (_audioEleRef.current) {\n      _audioEleRef.current.onpause = function (e) {\n        _playStatusRef.current = PLAY_STATUS.PAUSED;\n      };\n      _audioEleRef.current.onplay = function (e) {\n        _playStatusRef.current = PLAY_STATUS.PLAYING;\n        createAndConnect(_audioEleRef.current);\n        drawSpectrum();\n      };\n    }\n  };\n  useEffect(function () {\n    prepareElements();\n    handleBrowserVendors();\n    initAudioEvents();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    id: id,\n    width: width,\n    height: height\n  });\n}", "export var getRandomId = function getRandomId(len) {\n  var str = '1234567890-qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM';\n  var strLen = str.length;\n  var res = '';\n  for (var i = 0; i < len; i++) {\n    var randomIndex = Math.floor(Math.random() * strLen);\n    res += str[randomIndex];\n  }\n  return res;\n};"],
  "mappings": "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",
  "names": ["getRandomId", "PLAY_STATUS", "prepareElements", "handleBrowserVendors", "createAndConnect", "audioEle", "drawSpectrum", "drawMeter", "initAudioEvents"]
}
